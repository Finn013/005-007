
import React, { useState } from 'react';
import { Plus, Menu, Share, Trash } from 'lucide-react';
import { Button } from '@/components/ui/button';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
} from '@/components/ui/dropdown-menu';
import { AppSettings } from '../types/note';

interface HeaderProps {
  onCreateNote: () => void;
  settings: AppSettings;
  onSettingsChange: (settings: Partial<AppSettings>) => void;
  onImportNotes: (file: File) => void;
  onExportAllNotes: () => void;
  selectedCount?: number;
  onExportSelected?: () => void;
  onDeleteSelected?: () => void;
}

const Header: React.FC<HeaderProps> = ({ 
  onCreateNote, 
  settings, 
  onSettingsChange, 
  onImportNotes,
  onExportAllNotes,
  selectedCount = 0,
  onExportSelected,
  onDeleteSelected
}) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const handleFileImport = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      onImportNotes(file);
      event.target.value = '';
    }
  };

  return (
    <header className="sticky top-0 z-50 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 border-b">
      <div className="flex items-center justify-between p-4">
        <h1 className="text-xl font-bold text-foreground">üìù –ó–∞–º–µ—Ç–∫–∏</h1>
        
        <div className="flex items-center gap-2">
          <Button onClick={onCreateNote} size="sm" className="gap-2">
            <Plus size={16} />
            <span className="hidden sm:inline">–°–æ–∑–¥–∞—Ç—å</span>
          </Button>
          
          <DropdownMenu open={isMenuOpen} onOpenChange={setIsMenuOpen}>
            <DropdownMenuTrigger asChild>
              <Button variant="outline" size="sm" className="relative">
                <Menu size={16} />
                {selectedCount > 0 && (
                  <span className="absolute -top-2 -right-2 bg-primary text-primary-foreground text-xs rounded-full w-5 h-5 flex items-center justify-center">
                    {selectedCount}
                  </span>
                )}
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end" className="w-56 bg-popover">
              <DropdownMenuItem onClick={onCreateNote}>
                <Plus size={16} className="mr-2" />
                –°–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É
              </DropdownMenuItem>
              
              <DropdownMenuSeparator />
              
              <DropdownMenuSub>
                <DropdownMenuSubTrigger>
                  üî§ –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
                </DropdownMenuSubTrigger>
                <DropdownMenuSubContent>
                  <DropdownMenuItem
                    onClick={() => onSettingsChange({ globalFontSize: 'small' })}
                    className={settings.globalFontSize === 'small' ? 'bg-accent' : ''}
                  >
                    –ú–∞–ª–µ–Ω—å–∫–∏–π
                  </DropdownMenuItem>
                  <DropdownMenuItem
                    onClick={() => onSettingsChange({ globalFontSize: 'medium' })}
                    className={settings.globalFontSize === 'medium' ? 'bg-accent' : ''}
                  >
                    –°—Ä–µ–¥–Ω–∏–π
                  </DropdownMenuItem>
                  <DropdownMenuItem
                    onClick={() => onSettingsChange({ globalFontSize: 'large' })}
                    className={settings.globalFontSize === 'large' ? 'bg-accent' : ''}
                  >
                    –ë–æ–ª—å—à–æ–π
                  </DropdownMenuItem>
                </DropdownMenuSubContent>
              </DropdownMenuSub>
              
              <DropdownMenuSub>
                <DropdownMenuSubTrigger>
                  {settings.theme === 'light' ? '‚òÄÔ∏è' : 'üåô'} –¢–µ–º–∞
                </DropdownMenuSubTrigger>
                <DropdownMenuSubContent>
                  <DropdownMenuItem
                    onClick={() => onSettingsChange({ theme: 'light' })}
                    className={settings.theme === 'light' ? 'bg-accent' : ''}
                  >
                    ‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è
                  </DropdownMenuItem>
                  <DropdownMenuItem
                    onClick={() => onSettingsChange({ theme: 'dark' })}
                    className={settings.theme === 'dark' ? 'bg-accent' : ''}
                  >
                    üåô –¢—ë–º–Ω–∞—è
                  </DropdownMenuItem>
                </DropdownMenuSubContent>
              </DropdownMenuSub>
              
              <DropdownMenuSub>
                <DropdownMenuSubTrigger>
                  üìä –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
                </DropdownMenuSubTrigger>
                <DropdownMenuSubContent>
                  <DropdownMenuItem
                    onClick={() => onSettingsChange({ sortBy: 'date' })}
                    className={settings.sortBy === 'date' ? 'bg-accent' : ''}
                  >
                    –ü–æ –¥–∞—Ç–µ
                  </DropdownMenuItem>
                  <DropdownMenuItem
                    onClick={() => onSettingsChange({ sortBy: 'title' })}
                    className={settings.sortBy === 'title' ? 'bg-accent' : ''}
                  >
                    –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é
                  </DropdownMenuItem>
                </DropdownMenuSubContent>
              </DropdownMenuSub>
              
              <DropdownMenuSeparator />
              
              <DropdownMenuItem onClick={onExportAllNotes}>
                üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
              </DropdownMenuItem>
              
              <DropdownMenuItem asChild>
                <label className="cursor-pointer">
                  üì• –ò–º–ø–æ—Ä—Ç –∑–∞–º–µ—Ç–æ–∫
                  <input
                    type="file"
                    accept=".json"
                    onChange={handleFileImport}
                    className="hidden"
                  />
                </label>
              </DropdownMenuItem>
              
              {selectedCount > 0 && (
                <>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem onClick={onExportSelected} className="text-primary">
                    <Share size={16} className="mr-2" />
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ ({selectedCount})
                  </DropdownMenuItem>
                  <DropdownMenuItem onClick={onDeleteSelected} className="text-destructive">
                    <Trash size={16} className="mr-2" />
                    –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ ({selectedCount})
                  </DropdownMenuItem>
                </>
              )}
            </DropdownMenuContent>
          </DropdownMenu>
        </div>
      </div>
    </header>
  );
};

export default Header;
